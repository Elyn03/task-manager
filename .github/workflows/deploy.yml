name: Deploy AWS

on:
  pull_request:
    branches: [main]

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Plan 
        run: terraform plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve

  build_n_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          cd client
          npm ci

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and push backend image
      #   run: |
      #     cd server
      #     docker build -t task-manager-api ./server
      #     docker tag task-manager-api lokiice/task-manager:server
      #     docker push lokiice/task-manager:server

      # - name: Build and push frontend image
      #   run: |
      #     cd client
      #     docker build -t task-manager-client .
      #     docker tag task-manager-client lokiice/task-manager:client
      #     docker push lokiice/task-manager:client

      - name: Build React App
        run: |
          cd client
          npm install
          npm run build

      - name: Get S3 bucket name from Terraform
        id: get-bucket
        run: |
          cd infra
          terraform init -input=false
          echo "BUCKET_NAME=$(terraform output -raw s3_bucket_name)" >> $GITHUB_OUTPUT

      - name: Deploy to S3
        run: |
          aws s3 sync client/dist/ s3://${{ steps.get-bucket.outputs.BUCKET_NAME }} --delete

      - name: Get CloudFront distribution ID
        id: get-cloudfront
        run: |
          cd infra
          terraform init -input=false
          echo "DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ steps.get-cloudfront.outputs.DISTRIBUTION_ID }} --paths "/*"
